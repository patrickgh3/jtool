<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEditorInputOverlay</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)
draw_set_alpha(0.5)
draw_rectangle(0,0,1055,607,false)

// backing and label
if mode == input_textbox {
    var back_w = 150
    var back_h = 150
    var label_yo = -30
}
else if mode == input_textarea {
    var back_w = 450
    var back_h = 140+max(160, string_height(keyboard_string)+26)
    var label_yo = -30
}
else if mode == input_yesno {
    var back_w = 320
    var back_h = 130
    var label_yo = -20
}
else if mode == input_info {
    var back_w = 280
    var back_h = 120
    var label_yo = -30
    if back_h &lt; string_height(label) + 64 {
        back_h = string_height(label) + 64
    }
}
else if mode == input_about {
    var back_w = 320
    var back_h = 580
    var label_yo = 0
}
else if mode == input_depth {
    var back_w = 280
    var back_h = 380
    var label_yo = 0
}
else if mode == input_newversion {
    var back_w = 280
    var back_h = 150
    var label_yo = -20
}

fontSetup(font_small,c_black,fa_center,fa_center,1)
back_w = floor(max(back_w,string_width(label)+30))
if back_w mod 2 == 1 back_w += 1
var xx = 528-back_w/2
var yy = 304-back_h/2
draw_sprite_ext(sPopup,0,xx+1,yy,
    (back_w-1)/sprite_get_width(sPopup),back_h/sprite_get_height(sPopup),0,c_white,1)
draw_rectangle(xx,yy,xx+back_w-1,yy+back_h-1,true)
draw_text(528,304+label_yo,label)

// X button
var xbutton_height = 25
var xbutton_width = 41
var bx = 528+back_w/2-xbutton_width
var by = 304-back_h/2
if menuButton(bx, by, xbutton_width, xbutton_height, '', true, false) {
    inputOverlayCancel()
}
var lsy = 4
var lsx = 12
draw_line(bx+lsx,by+lsy,bx+xbutton_width-lsx-2,by+xbutton_height-lsy-2)
draw_line(bx+lsx,by+lsy+1,bx+xbutton_width-lsx-2,by+xbutton_height-lsy-2+1)
draw_line(bx+lsx,by+xbutton_height-lsy-2,bx+xbutton_width-lsx-2,by+lsy)
draw_line(bx+lsx,by+xbutton_height-lsy-2+1,bx+xbutton_width-lsx-2,by+lsy+1)

// contents
if mode == input_newversion {
    var button_yo = 25
    var button_w = 110
    var button_h = 32
    if menuButton(528-button_w/2,304+button_yo,button_w,button_h,'Github repo',true,false)
    or keyboard_check_pressed(vk_enter) {
        inputOverlayYes()
    }
}
if mode == input_depth {
    fontSetup(font_small, c_black, fa_center, fa_top, 1)
    draw_text(528, 304-back_h/2+7,'Set Depth Order')
    draw_text(528, 304-back_h/2+50,'Front')
    draw_text(528, 304+back_h/2-87,'Back')
    
    var labelX = 528-100
    var spritesX = 528-40
    var buttonX = 528+85
    
    var orderChanged = false
    var h = 50
    for (var i=0; i&lt;ds_list_size(global.depthList); i++) {
        var yy = 304-back_h/2+70+i*(h+10)
        //drawButton(528-w/2,yy,w,h,false)
        var text;
        var spritesY = yy+7
        switch ds_list_find_value(global.depthList, i){
            case depthorder_block:
               text = 'blocks'
               draw_sprite(sEditBlock, 0, spritesX, spritesY)
               draw_sprite(sWalljumpR, 0, spritesX+64-24+4, spritesY)
               break
            case depthorder_spike:
               text = 'spikes'
               draw_sprite_ext(sSpikeUp, 0, spritesX, spritesY, 1, 1, 0, global.color_killer, 1)
               draw_sprite_ext(sApple, 0, spritesX+52, spritesY+16, 1, 1, 0, global.color_killer, 1)
               break
            case depthorder_water:
               text = 'water'
               draw_sprite(sWater2, 0, spritesX, spritesY)
               draw_sprite(sWater3, 0, spritesX+40, spritesY)
               break
            case depthorder_player:
               text = 'player'
               draw_sprite(sPlayerIdle, 0, spritesX+16, spritesY+20)
               draw_sprite(sSave, 0, spritesX+32, spritesY)
               draw_sprite(sJumpRefresher, 0, spritesX+80, spritesY+16)
               break
        }
        fontSetup(font_small, c_black, fa_left, fa_top, 1)
        draw_text(labelX,yy+10,text)
        
        if i != 0 {
            var bx = buttonX
            var by = yy
            var bw = 30
            var bh = 20
            if menuButton(bx,by,bw,bh,'',true,false) {
                if ds_list_find_value(global.depthList, i-1) == depthorder_player
                    and (ds_list_find_value(global.depthList, i) == depthorder_spike
                    or ds_list_find_value(global.depthList, i) == depthorder_block) {
                    instance_create(528+back_w/2+16,304-50,oDepthOrderPlayerHint)
                }
                else {
                    var val = ds_list_find_value(global.depthList, i)
                    ds_list_delete(global.depthList, i)
                    ds_list_insert(global.depthList, i-1, val)
                    orderChanged = true
                }
            }
            draw_sprite(sDepthArrowUp,0,bx+bw/2,by+bh/2)
        }
        
        if i != ds_list_size(global.depthList)-1 {
            var bx = buttonX
            var by = yy+19
            var bw = 30
            var bh = 20
            if menuButton(bx,by,bw,bh,'',true,false) {
                if ds_list_find_value(global.depthList, i) == depthorder_player
                    and (ds_list_find_value(global.depthList, i+1) == depthorder_spike
                    or ds_list_find_value(global.depthList, i+1) == depthorder_block) {
                    instance_create(528+back_w/2+16,304-50,oDepthOrderPlayerHint)
                }
                else {
                    var val = ds_list_find_value(global.depthList, i)
                    ds_list_delete(global.depthList, i)
                    ds_list_insert(global.depthList, i+1, val)
                    orderChanged = true
                }
            }
            draw_sprite_ext(sDepthArrowUp,0,bx+bw/2,by+bh/2,1,-1,0,c_white,1)
        }
    }
    
    if orderChanged {
        saveConfig()
        updatePaletteDepths()
    }
    
    var button_yo = 145
    var button_w = 90
    var button_h = 32
    if menuButton(528-button_w/2,304+button_yo,button_w,button_h,'Ok',true,false)
    or keyboard_check_pressed(vk_enter) {
        inputOverlayYes()
    }
    
    var bw = 20
    var bh = 20
    if menuButton(528-back_w/2,304-back_h/2,bw,bh,'',true,false) {
        oWakahaEasterEgg.visible = not oWakahaEasterEgg.visible
    }
}
else if mode == input_textbox {
    var textbox_yo = -10
    var textbox_w = 40
    var textbox_h = 32
    var cursor_h = 20
    var xx = 528-textbox_w/2
    var yy = 304+textbox_yo
    var ycenter = yy+textbox_h/2
    drawButton(xx,yy,textbox_w,textbox_h,true)
    fontSetup(font_small,c_black,fa_left,fa_center,1)
    draw_text(xx+6,ycenter,keyboard_string)
    if floor(global.count/20) mod 2 == 0 {
        var xxx = xx+string_width(keyboard_string)+8
        draw_line(xxx,ycenter-cursor_h/2,xxx,ycenter+cursor_h/2)
    }
    fontSetup(font_small,c_black,fa_right,fa_center,1)
    draw_text(xx-3,ycenter,textbox_label)
    
    var button_yo = 30
    var button_w = 80
    var button_h = 32
    if menuButton(528-button_w/2,304+button_yo,button_w,button_h,'Ok',true,false)
    or keyboard_check_pressed(vk_enter) {
        inputOverlayStringSubmit()
    }
}
else if mode == input_textarea {
    var textbox_w = 400
    var textbox_h = max(160, string_height(keyboard_string)+26)
    var textbox_yo = -10-64-(textbox_h-160)/2
    var cursor_h = 20
    var xx = 528-textbox_w/2
    var yy = 304+textbox_yo
    var ycenter = yy+textbox_h/2
    drawButton(xx,yy,textbox_w,textbox_h,true)
    fontSetup(font_small,c_black,fa_left,fa_top,1)
    draw_text(xx+6,yy+6,keyboard_string)
    // find cursor position and draw it
    if floor(global.count/20) mod 2 == 0 {
        var tempstr = keyboard_string
        var charindex = 0
        var numlines = 0
        var lastnewline = string_pos('#', tempstr)
        while lastnewline != 0 {
            charindex += lastnewline
            tempstr = string_copy(tempstr, lastnewline+1, string_length(tempstr)-lastnewline)
            numlines += 1
            lastnewline = string_pos('#', tempstr)
        }
        var xxx = xx+string_width(tempstr)+8
        var yyy = yy+6+6+string_height('1')*numlines
        draw_line(xxx,yyy-cursor_h/2,xxx,yyy+cursor_h/2)
    }
    fontSetup(font_small,c_black,fa_center,fa_center,1)
    draw_text(528,yy-32,label)
    
    var button_yo = 30
    var button_w = 80
    var button_h = 32
    if menuButton(528-button_w/2,yy+textbox_h+16,button_w,button_h,'Ok',true,false) {
        inputOverlayStringSubmit()
    }
    if keyboard_check_pressed(vk_enter) {
        keyboard_string+="#"
    }
    else if keyboard_check_pressed(ord('C')) { //copy code to clipboard
        if keyboard_check_direct(vk_control) {
            //keyboard_string = string_copy(keyboard_string,1,string_length(keyboard_string)-1)
            clipboard_set_text(string_replace_all(keyboard_string,'#',chr(13)+chr(10)))
        }
    }
    else if keyboard_check_pressed(ord('V')) { //paste to append code from clipboard
        if keyboard_check_direct(vk_control) {
            keyboard_string += string_replace_all(string_replace_all(clipboard_get_text(),chr(13),''),chr(10),'#')
        }
    }
}
else if mode == input_yesno {
    var button_yo = 15
    var button_w = 80
    var button_h = 32
    var button_space = 12
    
    var xx1 = 528-(button_w*1.5+button_space)
    var xx2 = 528-button_w/2
    var xx3 = 528+button_w/2+button_space
    var yy = 304+button_yo
    if menuButton(xx1,yy,button_w,button_h,'Yes',true,false)
    or keyboard_check_pressed(vk_enter) {
        inputOverlayYes()
    }
    if menuButton(xx2,yy,button_w,button_h,'No',true,false) {
        inputOverlayNo()
    }
    if menuButton(xx3,yy,button_w,button_h,'Cancel',true,false) {
        inputOverlayCancel()
    }
}
else if mode == input_info {
    var button_yo = 15
    var button_w = 90
    var button_h = 32
    //if menuButton(528-button_w/2,304+button_yo,button_w,button_h,'Ok',true,false)
    if menuButton(528-button_w/2,304+back_h/2-button_h-button_yo,button_w,button_h,'Ok',true,false)
    or keyboard_check_pressed(vk_enter) {
        inputOverlayYes()
    }
}
else if mode == input_about {
    fontSetup(font_small,c_black,fa_center,fa_top,1)
    draw_text(528,304-270,'jtool version '+global.version_string+'#record version 1.1'
    +'##Patrickgh3 - initial author'
    +'#Klazen108 - object code'
    +'#Redire - additional features'
    +'#DuckNumbers - additional features'
    +'#Cube - player recording'
    +'##Special Thanks:'
    +'#YoYoYoDude1 - studio engine'
    +'#Thenewgeezer - the original RMJ'
    +'#people who gave feedback and feature ideas'
    
    +'##Please read readme.html and changelog.txt#for more info!')
    
    draw_sprite(sIcon32, 0, 528-105, 304-263)
    
    var button_w = 130
    var button_h = 32
    if menuButton(528-button_w/2,304+90,button_w,button_h,'Forum thread',true,false) {
        url_open_full('http://www.iwannacommunity.com/forum/index.php?topic=1964.0','_blank', '')
    }
    
    if menuButton(528-button_w/2,304+130,button_w,button_h,'Skin library',true,false) {
        url_open_full('http://iwannacommunity.com/forum/index.php?topic=2605','_blank', '')
    }
    
    if menuButton(528-button_w/2,304+170,button_w,button_h,'More of my tools',true,false) {
        url_open_full('http://cwpat.me/iwanna-tools/','_blank', '')
    }
    
    var button_w = 90
    if menuButton(528-button_w/2,304+230,button_w,button_h,'Ok',true,false) {
        inputOverlayYes()
    }
    
    var bw = 20
    var bh = 20
    if menuButton(528+back_w/2-bw,304+back_h/2-bh,bw,bh,'',true,false) {
        global.joketitleindex += 1
        updateCaption()
    }
}

if keyboard_check_pressed(vk_escape) {
    inputOverlayCancel()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// don't draw sprite
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
